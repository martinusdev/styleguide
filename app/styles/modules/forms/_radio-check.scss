// ---------------------------------------------
// RADIO/CHECKBOX
// ---------------------------------------------

// wrapper
.checkbox,
.radio {
  display: inline-flex;
  align-items: flex-start;
}

.radiocheck {
  $this: &;

  // native checkbox / radio input element
  &__input {
    @include visually-hidden;
  }

  &__control {
    position: relative;
    cursor: pointer;

    @include css-map($radio-check, 'default');

    [disabled] + &,
    .is-disabled + &,
    [readonly] + &,
    .readonly + & { pointer-events: none; }

    &::before,
    &::after {
      opacity: 0;
      transition: opacity $ease-300;
    }

    :checked + & {
      @include css-map($radio-check-checked, 'default');
      // stylelint-disable-next-line
      &::before,
      &::after {
        opacity: 1;
      }
    }

    :focus + &,
    .is-active + & {
      @include css-map($radio-check, 'focus');
    }

    :checked:focus + &,
    :checked.is-active + & {
      @include css-map($radio-check-checked, 'focus');
    }

    [disabled] + &,
    .is-disabled + & {
      @include css-map($radio-check, 'disabled');
    }

    :checked[disabled] + &,
    :checked.is-disabled + & {
      @include css-map($radio-check-checked, 'disabled');
    }

    [readonly] + &,
    .is-readonly + & {
      @include css-map($radio-check, 'readonly');
    }

    :checked[readonly] + &,
    :checked.is-readonly + & {
      @include css-map($radio-check-checked, 'readonly');
    }

    .is-error + & {
      @include css-map($radio-check, 'error');
    }

    :checked.is-error + & {
      @include css-map($radio-check-checked, 'error');
    }

    [disabled] + &,
    .is-disabled + & {
      // stylelint-disable-next-line
      &::before,
      &::after {
        // background-color: map-get($radio-check-color, 'disabled');
      }
      + .radiocheck__label { // stylelint-disable-line
        color: map-get($radio-check-color, 'disabled');
        pointer-events: none;
      }
    }

    [readonly] + &,
    .is-readonly + & {
      // stylelint-disable-next-line
      &::before,
      &::after {
        // background-color: map-get($radio-check-color, 'readonly');
      }

      // stylelint-disable-next-line
      + .radiocheck__label {
        color: map-get($radio-check-color, 'readonly');
        pointer-events: none;
      }
    }

    .is-error + & {
      // stylelint-disable-next-line
      &::before,
      &::after {
        background-color: map-get($radio-check-color, 'error');
      }

      + .radiocheck__label {   // stylelint-disable-line
        color: map-get($radio-check-color, 'error');
      }
    }
  }

  // checkbox
  .checkbox &__control {
    @include border-radius($default-border-radius);

    &::after {
      content: '';
      display: block;
      width: 100%;
      height: 100%;
      background: svg-load('./../icons_/css/checkbox-tick.svg') no-repeat center center;
    }
  }

  // radio
  .radio &__control {
    border-radius: 100%;

    &::after {
      content: '';
      display: block;
      width: 100%;
      height: 100%;
      background: svg-load('./../icons_/css/radio-tick.svg') no-repeat center center;
    }
  }

  // checkbox / radio labels
  &__label {
    display: block;
    cursor: pointer;

    @include css-map($radio-check-label);
  }

  // -----------------
  // checkbox / radio sizing

  // @each $size, $props in $radio-check-sizes {
  //   &#{_get-variant-name($size)} {
  //     #{$this}__control {
  //       width: map_get($props, 'size');
  //       height: map_get($props, 'size');
  //     }
  //
  //     #{$this}__label {
  //       font-size: map_get($props, 'font-size');
  //     }
  //   }
  // }

  // -----------------
  // checkbox and radio groups

  &-group {
    @include clearfix;
    display: inline-block;

    .checkbox,
    .radio {
      float: left;
      clear: both;
      margin: 0;
    }
  }

  // checkbox and radio groups with full width
  &-group--wider {
    display: block;

    .checkbox,
    .radio {
      width: 100%;
    }

    #{$this}__label {
      width: calc(100% - 1.3rem);
    }
  }
}
