// ---------------------------------------------
// INPUT
// ---------------------------------------------

@mixin input() {
  position: relative;
  display: inline-block;
  width: 100%;
  margin: 0;
  transform: translateZ(0);

  @each $variant, $props in $input {
    &#{_get-variant-name($variant)} {
      @include css-map($props, 'default');

      &:hover {
        @include css-map($props, 'hover');
      }

      &:focus,
      &.is-active {
        @include css-map($props, 'focus');
      }

      &.is-value {
        @include css-map($props, 'value');
      }

      &[disabled],
      &.is-disabled {
        @include css-map($props, 'disabled');
      }

      &[readonly],
      &.is-readonly {
        @include css-map($props, 'readonly');
      }

      &.is-error {
        @include css-map($props, 'error');

        &--no-cross { // stylelint-disable-line
          @include css-map($props, 'error--no-cross');
        }
      }

      &.is-valid {
        @include css-map($props, 'success');
      }
    }

    &--search {
      @include css-map($props, 'search');
    }
  }

  //  input sizes
  @each $size, $props in $input-sizes {
    &#{_get-variant-name($size)} {
      @include css-map($props);
    }
  }

  @each $variant, $props in $input-placeholder {
    &#{_get-variant-name($variant)} {
      // stylelint-disable max-nesting-depth
      &::placeholder { @include css-map($props, 'default'); }

      &:hover {
        &::placeholder { @include css-map($props, 'hover'); }
      }

      &:focus,
      &.is-active {
        &::placeholder { @include css-map($props, 'focus'); }
      }

      &[disabled],
      &.is-disabled {
        &::placeholder { @include css-map($props, 'disabled'); }
      }

      &[readonly],
      &.is-readonly {
        &::placeholder { @include css-map($props, 'readonly'); }
      }

      &.is-error {
        &::placeholder { @include css-map($props, 'error'); }
      }
      // stylelint-enable max-nesting-depth
    }
  }
}

.input {
  @include input;
}
