// ---------------------------------------------
// CARDS
// ---------------------------------------------

// CONTENTS
// Card
// Card header
// Card footer

// ----------------------------
// CARD

@mixin card($_card: $card) {
  $border-radius: _map-deep-get($card, 'default', 'border-radius');
  $after: map-get($_card, after);
  $_card: map_remove($_card, after);

  display: flex;
  flex-flow: column;
  margin-bottom: $default-space;

  @include css-map($_card);

  @if $after {
    &::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;

      @include css-map($after);
      border-bottom-left-radius: $border-radius;
      border-bottom-right-radius: $border-radius;
    }
  }

  > * + * {
    border-top: _map-deep-get($card, 'default', 'border');
  }

  > * {
    &:first-child {
      border-top-left-radius: $border-radius;
      border-top-right-radius: $border-radius;
    }

    &:last-child {
      border-bottom-left-radius: $border-radius;
      border-bottom-right-radius: $border-radius;
    }
  }
}

@mixin card-section(
  $card-section: $card-section,
  $grow: 0,
  $shrink: 0
) {
  flex: $grow $shrink auto;

  @each $breakpoint, $props in _get-breakpoint-map($card-section) {
    @include breakpoint($breakpoint) {
      @include css-map($props, default);
    }
  }

  &--overflow {
    overflow: hidden;
  }
}

@mixin card-classes {
  .card {
    position: relative;
    // padding: 0;

    @each $variant, $map in $card {
      &#{_get-variant-name( $variant)} {
        @include card($map);
      }
    }

    &__header {
      @include card-section;
      @include bar;
      @include css-map($card-header);

      flex-wrap: nowrap;
    }

    &-header__title {
      @include bar-content;
      margin-bottom: 0;
    }

    &-header__action {
      @include bar-item;
      min-width: 110px;

      &:first-child {
        text-align: left;
      }

      &:last-child {
        text-align: right;
      }
    }

    &__content {
      @include card-section($grow: 1);

      @each $breakpoint, $variants in _get-breakpoint-map($card-section) {
        @include breakpoint($breakpoint) {
          @each $variant, $props in $variants {
            &#{_get-variant-name($variant)} {
              @include css-map($props);

              &:first-child { //stylelint-disable-line
                padding-top: nth(map-get($props, padding), 1) * 2;
              }

              &:last-child { //stylelint-disable-line
                padding-bottom: nth(map-get($props, padding), 1) * 2;
              }
            }
          }
        }
      }

      > *:last-child {
        margin-bottom: _get-space('v', 'small');
      }
    }

    &__footer {
      @include card-section;
    }

    &__status {
      position: absolute;

      top: 10px;
      right: 10px;
    }

    &--done {
      &::after {
        content: '';
        height: _get-rem(24px);
        width: _get-rem(24px);
        position: absolute;
        top: +(_get-rem(1px));
        left: -(_get-rem(10px));
        background-image: svg-load('./../icons_/app/check-circle.svg');
        background-color: $default-bg-color;
        border-radius: $default-border-radius-circle;
      }
    }

    &--speech-bubble {
      position: relative;
      border-bottom-left-radius: 0;

      &::after {
        content: '';
        position: absolute;
        top: 100%;
        left: 0;
        width: 0;
        height: 0;
        border-style: solid;
        border-width: 10px 10px 0 0;
        border-color: $color-white transparent transparent;
      }

      &.bg-secondary::after {
        border-color: $secondary-bg-color transparent transparent;
      }
    }
    // stylelint-disable max-nesting-depth
    &--arrowhead {
      overflow: visible;

      &::before {
        @include breakpoint('m') {
          content: '';
          display: inline-block;
          width: 0;
          height: 0;
          position: absolute;
        }
      }

      &.card--well::before {
        border-right-color: #fbf7f5;
      }

      &-left::before {
        top: 50%;
        left: -8px;
        transform: translateY(-50%);
        border-top: 8px solid transparent;
        border-bottom: 8px solid transparent;
        border-right: 8px solid #fff;
      }

      &-right::before {
        top: 50%;
        right: -8px;
        transform: translateY(50%);
        border-top: 8px solid transparent;
        border-bottom: 8px solid transparent;
        border-left: 8px solid #fff;
      }

      &-top::before {
        left: 50%;
        top: -8px;
        transform: translateX(-50%);
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        border-bottom: 8px solid #fff;
      }

      &-bottom::before {
        left: 50%;
        bottom: -8px;
        transform: translateX(50%);
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        border-top: 8px solid #fff;
      }
    }
    // stylelint-enable max-nesting-depth
    .carousel {
      &.carousel--fade-outside .swiper-container {
        margin-right: 40px;
      }

      // stylelint-disable max-nesting-depth
      &--fade-outside {
        .carousel__btn--prev { left: -5px; }
        .carousel__btn--next { right: -45px; }
      }
      // stylelint-enable max-nesting-depth

      // stylelint-disable max-nesting-depth
      &--fan {
        .carousel__btn--prev { left: -5px; }
        .carousel__btn--next { right: -5px; }
      }
      // stylelint-enable max-nesting-depth
    }
  }
}

@include card-classes;
