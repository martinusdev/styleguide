// ---------------------------------------------
// LISTS
// ---------------------------------------------

// CONTENTS
// Lists
// List item sections

// ----------------------------
// LISTS

@use 'sass:map';

%list-counter {
  $size: map.get($list-counter, size);
  content: counter(section);
  display: block;
  counter-increment: section;

  width: $size;
  height: $size;
  line-height: $size;

  @include css-map($list-counter, style);

  z-index: 1;
}

@mixin list-base() {
  display: flex;
  flex-flow: column;
  margin-bottom: $default-space;
}

@mixin list-style($variant: 'default') {
  @include css-map($list, $variant);

  .list__item { // stylelint-disable-line
    display: flex;
    flex-flow: row;
    flex-wrap: wrap;

    @include css-map($list-item, $variant);

    &:last-child {
      border-bottom: 0;
    }

    > *:last-child {
      margin-bottom: 0;
    }
  }
}

@mixin list-item-clickable(
  $list-item-clickable: $list-item-clickable
) {
  @include css-map($list-item-clickable, 'default');
  cursor: pointer;

  &:focus,
  &:hover {
    @include css-map($list-item-clickable, 'focus');
  }

  &.is-selected {
    @include css-map($list-item-clickable, 'selected');

    &:focus,
    &:hover {
      @include css-map($list-item-clickable, 'selected-focus');
    }
  }

  &.is-disabled {
    @include css-map($list-item-clickable, 'disabled');
    cursor: not-allowed;
  }
}

@mixin list-classes {
  .list {
    @include list-base;

    .list {
      margin-top: _get-rem(10px);
      padding-left: _get-rem(20px);
    }

    .card__content > & {
      border-radius: map.get($card, 'border-radius');
    }
  }

  @each $variant in $list-variants {
    .list#{_get-variant-name($variant)} {
      @include list-style($variant);
    }
  }

  .list--counter {
    counter-reset: section;

    > li {
      position: relative;

      &::before {
        @extend %list-counter;
        position: absolute;
        top: -10px;
        left: -10px;

        opacity: 1;
        transform: translateY(0);
        z-index: 10;
      }
    }
  }

  .list .list__item--clickable {
    @include list-item-clickable;
  }
}

@include list-classes;

// ----------------------------
// LIST ITEM SECTIONS

@mixin list-item-section-classes() {
  .list__item__section {
    &:not(:last-child) {
      margin-right: _get-space();
    }

    &--primary {
      flex: 1 0 auto;
    }

    &--secondary {
      flex: 0 1 auto;
    }

    &--image {
      flex: 0 1 $list-item-section-image-size;
    }

    &--break {
      @include bar-break();
    }
  }
}

@include list-item-section-classes;

.list--products {
  display: flex;
  flex-direction: row;
  align-items: flex-end;
  padding: 0;
  margin-bottom: 0 !important;

  a.product-cover--book,
  a.product-cover:not(.product-cover--collection):hover,
  a.product-cover:not(.product-cover--collection):active,
  a.product-cover--collection img:hover,
  a.product-cover--collection img:active
  {
    box-shadow: 0 10px 10px 0 rgba(0, 0, 0, 0.10), 0 1px 3px 0 rgba(0, 0, 0, 0.07);
  }

  li {
    margin-right: _get-rem(30px);
    margin-bottom: 0;
    width: _get-rem(120px);
    flex-shrink: 0;

    &:first-child {
      margin-left: _get-space();
    }

    &:last-child {
      margin-right: 0;
    }
  }

  @include breakpoint(l) {
    li {
      &:first-child {
        margin-left: 0;
      }
    }
  }

  &--responsive {
    @include breakpoint(l) {
      flex-direction: column;
      align-items: flex-start;

      li {
        margin-bottom: _get-space('medium');
        width: 100%;

        &:last-child {
          margin-bottom: 0;
        }
      }
    }
  }
}

.fa-ul {
  --fa-li-margin: 1.5em;
  display: flex;
  flex-direction: column;
  gap: _get-space(tiny);
}
