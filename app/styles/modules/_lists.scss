// ---------------------------------------------
// LISTS
// ---------------------------------------------

// CONTENTS
// Lists
// List item sections

// ----------------------------
// LISTS

@use 'sass:map';

%list-counter {
  $size: map.get($list-counter, size);
  content: counter(section);
  display: block;
  counter-increment: section;

  width: $size;
  height: $size;
  line-height: $size;

  @include css-map($list-counter, style);

  z-index: 1;
}

@mixin list-base() {
  display: flex;
  flex-flow: column;
  margin-bottom: $default-space;
}

@mixin list-style($variant: 'default') {
  @include css-map($list, $variant);

  .list__item { // stylelint-disable-line
    display: flex;
    flex-flow: row;
    flex-wrap: wrap;

    @include css-map($list-item, $variant);

    &:last-child {
      border-bottom: 0;
    }

    > *:last-child {
      margin-bottom: 0;
    }
  }
}

@mixin list-item-clickable(
  $list-item-clickable: $list-item-clickable
) {
  @include css-map($list-item-clickable, 'default');
  cursor: pointer;

  &:focus,
  &:hover {
    @include css-map($list-item-clickable, 'focus');
  }

  &.is-selected {
    @include css-map($list-item-clickable, 'selected');

    &:focus,
    &:hover {
      @include css-map($list-item-clickable, 'selected-focus');
    }
  }

  &.is-disabled {
    @include css-map($list-item-clickable, 'disabled');
    cursor: not-allowed;
  }
}

@mixin list-classes {
  .list {
    @include list-base;

    .list {
      margin-top: _get-rem(10px);
      padding-left: _get-rem(20px);
    }

    .card__content > & {
      border-radius: map.get($card, 'border-radius');
    }
  }

  @each $variant in $list-variants {
    .list#{_get-variant-name($variant)} {
      @include list-style($variant);
    }
  }

  .list--counter {
    counter-reset: section;

    > li {
      position: relative;

      &::before {
        @extend %list-counter;
        position: absolute;
        top: -10px;
        left: -10px;

        opacity: 1;
        transform: translateY(0);
        z-index: 10;
      }
    }
  }

  .list .list__item--clickable {
    @include list-item-clickable;
  }
}

@include list-classes;

.list--checkmark {
  margin-left: 0;
  padding-left: 0;
  display: flex;
  flex-direction: column;
  gap: _get-space(small);

  li {
    display: flex;
    align-items: baseline;

    &::before {
      flex-shrink: 0;
      display: block;
      content: '';
      height: 16px;
      width: 16px;
      margin-right: _get-space(tiny);
      transform: translateY(2px);

      background-image: svg-load('./../../node_modules/@fortawesome/fontawesome-pro/svgs/regular/circle-check.svg', fill=_color(success));
      background-size: 16px;
      background-repeat: no-repeat;
    }
  }
}

// ----------------------------
// LIST ITEM SECTIONS

@mixin list-item-section-classes() {
  .list__item__section {
    &:not(:last-child) {
      margin-right: _get-space();
    }

    &--primary {
      flex: 1 0 auto;
    }

    &--secondary {
      flex: 0 1 auto;
    }

    &--image {
      flex: 0 1 $list-item-section-image-size;
    }

    &--break {
      @include bar-break();
    }
  }
}

@include list-item-section-classes;
