@mixin bar {
  display: flex;
  flex-flow: row;
  flex-wrap: wrap;
  align-items: center;
  margin-top: -(_get-space('small'));
  margin-bottom: _get-space();

  &--no-wrap {
    flex-wrap: nowrap;
  }
}

@mixin bar-item(
  $width: 0
) {
  flex: 0 0 if($width == 0, auto, $width);
  min-width: 0;
  align-items: center;
  margin-top: _get-space('small');

  > *:not(.bar):not([class*='mb\-']) {
    margin-bottom: 0;
  }
}

@mixin bar-content() {
  @include bar-item;
  flex: 1 0 1px;
}

@mixin bar-border (
  $spacing: $bar-spacing
) {
  border-left: 1px solid $default-border-color;
  align-self: stretch;
}

@mixin bar-break(
  $height: $bar-break-height
) {
  flex: 1 0 100%;
  height: $height;
}

@mixin bar-classes {
  .bar {
    @include bar;

    &__item {
      @include bar-item;

      &--fill {
        flex: 1 0 1px;
      }

      &--shrinkable {
        flex-shrink: 1;
      }

      &--border {
        @include bar-border;
      }

      &--line {
        background-image: svg-load('./../images/content/line.svg');
        background-repeat: repeat-x;
        background-position-y: center;
      }

      &--line > * {
        background-color: $color-white;
        padding: 0 _get-space('small');
        display: inline-block;
      }
    }

    &--vertical {
      height: 100%;
      flex-flow: column;
      align-items: stretch;
      margin-top: 0;

      > .bar__item {
        margin-top: 0;
        margin-right: 0;
        margin-bottom: _map-deep-get($bar-spacing, 'default', 'default');

        &:last-child { // stylelint-disable-line
          margin-bottom: 0;
        }
      }
    }

    &__break {
      @include bar-break;
    }

    // responsive bar spacing
    @each $size, $props in $bar-spacing {
      &#{_get-variant-name($size, '--')} {
        .bar__item {
          @each $breakpoint, $space in _get-breakpoint-map($props) {
            @include breakpoint($breakpoint) { // stylelint-disable
              margin-right: $space;

              &:last-child {
                margin-right: 0;
              }
            }
          }
        }
      }
    }

    @each $size, $props in $bar--vertical-spacing {
      &#{_get-variant-name($size, '--vertical-')} {
        .bar__item {
          @each $breakpoint, $space in _get-breakpoint-map($props) {
            @include breakpoint($breakpoint) {
              margin-top: $space;
            }
          }
        }
      }
    }
  }
}

@include bar-classes;
