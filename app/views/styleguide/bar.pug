extends templates/layout

include ./../mixins/icon

//- Options
block prepend opts
  - var page = helpers.getPageIds('components.bar', l_sitemap);
  - var categoryID = page.category;
  - var pageID = page.page;

//- Content
block prepend content

  +main-info(['app/styles/layout/_bar.scss'], contents)

    +p-big Documentation of Bar layout component.

  //- end: main info

//- Content
block append content

  //- MEDIA QUERIES
  +content-section(contents[0])

    +p Bar is a simple horizontal layout for mixing content and actions.
    +p Creating a bar layout is easy: The wrapper needs a <code class="l-code-inline">.bar</code> class and it's children a <code class="l-code-inline">.bar__item</code> or <code class="l-code-inline">.bar__content</code> class.
    ul
      li <code class="l-code-inline">.bar__item</code> takes only the space it needs
      li <code class="l-code-inline">.bar__content</code> takes up all remaining space

    +demo
      +demo-example
        .row.row--space
          .col
            .bar
              .bar__item
                .l-debug <code class="l-code-inline">.bar__item</code>
              .bar__item.bar__item--fill
                .l-debug <code class="l-code-inline">.bar__item.bar__item--fill</code>
              .bar__item
                .l-debug <code class="l-code-inline">.bar__item</code>
        .row.row--space
          .col
            .l-debug
              .bar
                .bar__item
                  +icon('home', 'icon--large')
                h3.bar__item.bar__item--fill.m-none Home
                .bar__item
                  .btn.btn--primary Action

      +demo-code
        :code
          <div class="bar">
            <div class="bar__item"> ... </div>
            <div class="bar__content"> ... </div>
            <div class="bar__item"> ... </div>
          </div>

          <div class="bar">
            <div class="bar__item">
              <svg class="icon icon-home icon--large" role="img" aria-hidden="true">
                <use xlink:href="#icon-home"></use>
              </svg>
            </div>
            <h3 class="bar__item bar__item--fill">Home</h3>
            <div class="bar__item">
              <div class="btn btn--primary">Action</div>
            </div>
          </div>

    +content-sub-section('Bar vertical')
      +p Bar layout with vertical orientation.
      +p Wrapper needs <code class="l-code-inline">.bar</code> and <code class="l-code-inline">.bar--vertical</code> class.

      +demo
        +demo-example
          .row.row--space
            .col
              .bar.bar--vertical
                .bar__item
                  .l-debug <code class="l-code-inline">.bar__item</code>
                .bar__item
                  .l-debug <code class="l-code-inline">.bar__item</code>
                .bar__item
                  .l-debug <code class="l-code-inline">.bar__item</code>

        +demo-code
          :code
            <div class="bar bar--vertical">...</div>

    +content-sub-section('Bar gutters')
      +p Gutter between bar items can alterned with <code class='l-code-inline'>.bar--small</code>

      +demo
        +demo-example
          .row.row--space
            .col
              .bar.bar--small
                .bar__item
                  .l-debug Small
                .bar__item
                  .l-debug gutter with
                .bar__item.bar__item--fill
                  .l-debug <code class="l-code-inline">.bar--small</code>
            .col
              .bar.bar--tiny
                .bar__item
                  .l-debug Tiny
                .bar__item
                  .l-debug gutter with
                .bar__item.bar__item--fill
                  .l-debug <code class="l-code-inline">.bar--tiny</code>

        +demo-code
          :code
            <div class="bar bar--small">...</div>
            <div class="bar bar--tiny">...</div>

    +content-sub-section('Bar item with border')
      +p Border between bar items can be added as bar item with class <code class='l-code-inline'>.bar__item--border</code>.

      +note
        +p It's is usually placed on empty bar item, or space between border and bar item content needs to be handled.

      +demo
        +demo-example
          .row.row--space
            .col
              .bar
                .bar__item
                  .l-debug Between first
                .bar__item.bar__item--border
                .bar__item
                  .l-debug and second bar item
                .bar__item.bar__item--fill
                  .l-debug is border

        +demo-code
          :code
            <div class="bar__item bar__item--border"></div>

    +content-sub-section('Alignment')

      +p Bar is compatible with <a href="utilities#{htmlPostfix}#flexbox-alignment">flexbox alignment classes</a>.

      +demo
        +demo-example
          .row.row--space
            .col
              .bar
                .bar__item.align-self-start
                  .l-debug <code class="l-code-inline">.align-self-start</code>
                .bar__item.bar__item--fill.bar__item--shrinkable
                  p Nulla vitae elit libero, a pharetra augue. Curabitur blandit tempus porttitor. Vestibulum id ligula porta felis euismod semper. Nullam id dolor id nibh ultricies vehicula ut id elit. Nulla vitae elit libero, a pharetra augue. Curabitur blandit tempus porttitor. Vestibulum id ligula porta felis euismod semper. Nullam id dolor id nibh ultricies vehicula ut id elit. Nulla vitae elit libero, a pharetra augue. Curabitur blandit tempus porttitor. Vestibulum id ligula porta felis euismod semper. Nullam id dolor id nibh ultricies vehicula ut id elit. Nulla vitae elit libero, a pharetra augue. Curabitur blandit tempus porttitor. Vestibulum id ligula porta felis euismod semper. Nullam id dolor id nibh ultricies vehicula ut id elit.
                .bar__item.align-self-end
                  .l-debug <code class="l-code-inline">.align-self-end</code>
          hr
          .row.row--space
            .col
              <code class="l-code-inline">.bar.align-items-end</code>
              .bar.align-items-end
                .bar__item
                  .l-debug <code class="l-code-inline">.bar__item</code>
                .bar__item.bar__item--fill.bar__item--shrinkable
                  p Nulla vitae elit libero, a pharetra augue. Curabitur blandit tempus porttitor. Vestibulum id ligula porta felis euismod semper. Nullam id dolor id nibh ultricies vehicula ut id elit. Nulla vitae elit libero, a pharetra augue. Curabitur blandit tempus porttitor. Vestibulum id ligula porta felis euismod semper. Nullam id dolor id nibh ultricies vehicula ut id elit. Nulla vitae elit libero, a pharetra augue. Curabitur blandit tempus porttitor. Vestibulum id ligula porta felis euismod semper. Nullam id dolor id nibh ultricies vehicula ut id elit. Nulla vitae elit libero, a pharetra augue. Curabitur blandit tempus porttitor. Vestibulum id ligula porta felis euismod semper. Nullam id dolor id nibh ultricies vehicula ut id elit.
                .bar__item
                  .l-debug <code class="l-code-inline">.bar__item</code>
        +demo-code
          :code
            <div class="bar">
              <div class="bar__item align-self-start"> ... </div>
              <div class="bar__content"> ... </div>
              <div class="bar__item align-self-end"> ... </div>
            </div>

            <div class="bar align-items-end">
              <div class="bar__item"> ... </div>
              <div class="bar__content"> ... </div>
              <div class="bar__item"> ... </div>
            </div>

    //- end demo

  //- end: section
