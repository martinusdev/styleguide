extends templates/layout

include ./../mixins/icon

//- Options
block prepend opts
  -
    const {
      category: categoryID,
      page: pageID
    } = helpers.getPageIds('foundations.utilites', l_sitemap);

//- Content
block prepend content

  +main-info(['app/styles/tools/_utilities.scss'], contents)

    //- +p-big Documentation of headings, texts, list and all elements related to typography, including utility classes for text.

  //- end: main info

//- Content
block append content

  //- HEADINGS
  +content-section(contents[0])

    +p Text utility classes provides basic functionality such as alignment or text transform. There are also utility classes for text colors.

    +note
      +p Always consider using semantic HTML when styling text (<code class="l-code-inline">strong</code>, <code class="l-code-inline">em</code>).

    +demo
      +demo-example
        p
          code.l-code-inline .text-bold
          span.text-bold.ml-small text bold
          br
          code.l-code-inline .text-semibold
          span.text-semibold.ml-small text semibold
          br
          code.l-code-inline .text-light
          span.text-light.ml-small text light
          br
          code.l-code-inline .text-italic
          span.text-italic.ml-small text italic
          br
          code.l-code-inline .text-strikethrough
          span.text-strikethrough text strikethrough
          br
          code.l-code-inline .text-normal
          span.text-normal text normal

        p
          code.l-code-inline .text-size-regular
          span.text-size-regular text regular
          br
          code.l-code-inline .text-size-medium
          span.text-size-medium text medium
          br
          code.l-code-inline .text-size-small
          span.text-size-small text small

        hr

        p.text-left
          code.l-code-inline .text-left
        p.text-center
          code.l-code-inline .text-center
        p.text-right
          code.l-code-inline .text-right
        p.text-justify(style="width: 200px")
          code.l-code-inline .text-justify
          | Lorem ea dolor ea exercitation et esse incididunt ut Excepteur officia Ut sint cupidatat cupidatat
        hr

        p
          | Icon
          +icon-sg('sg-home', 'icon--xlarge').text-vam
          | with <code class='l-code-inline'>.text-vam</code>
        p
          | Icon
          +icon-sg('sg-home', 'icon--xlarge').text-vat
          | with <code class='l-code-inline'>.text-vat</code>
        p
          | Icon
          +icon-sg('sg-home', 'icon--xlarge').text-vab
          | with <code class='l-code-inline'>.text-vab</code>
        p
          | Icon
          +icon-sg('sg-home', 'icon--xlarge').text-vabl
          | with <code class='l-code-inline'>.text-vabl</code>
        p
          | Icon
          +icon-sg('sg-home', 'icon--xlarge').text-vamd
          | with <code class='l-code-inline'>.text-vamd</code>

        hr

        p
          code.l-code-inline .text-transform-upper
          span.text-transform-upper.ml-small text transform uppercase
          br
          code.l-code-inline .text-transform-capitalize
          span.text-transform-capitalize.ml-small text transform capitalize
          br
          code.l-code-inline .text-transform-none
          span.text-transform-none.ml-small text transform none

        hr

        p.text-nowrap(style="")
          code.l-code-inline .text-nowrap
          span.ml-small Text no warp ea dolor ea exercitation et esse incididunt ut Excepteur officia. Tempor officia minim cillum do aute nulla sint dolor Lorem proident nisi elit.

        p.text-ellipsis(style="width: 200px")
          code.l-code-inline .text-ellipsis
          span.ml-small Text ellipsis

      +demo-code
        :code
          <p>
            <span class="text-bold">text bold</span>
            <span class="text-semibold">text semibold</span>
            <span class="text-light">text light</span>
            <span class="text-italic">text italic</span>
            <span class="text-normal">text normal</span>
          </p>

          <p>
            <span class="text-size-regular">text regular</span>
            <span class="text-size-medium">text medium</span>
            <span class="text-size-small">text small</span>
          </p>

          <p class="text-left">...</p>
          <p class="text-center">...</p>
          <p class="text-right">...</p>
          <p class="text-justify">...</p>

          <p>... <svg class="icon text-vam"></svg> ...</p>
          <p>... <svg class="icon text-vat"></svg> ...</p>
          <p>... <svg class="icon text-vab"></svg> ...</p>
          <p>... <svg class="icon text-vabl"></svg> ...</p>

          <span class="text-transform-upper">text transform uppercase</span>
          <span class="text-transform-capitalize">text transform capitalize</span>
          <span class="text-transform-none">text transform none</span>

          <p class="text-nowrap">...</p>
          <p class="text-ellipsis">...</p>
    //- end: demo

    +content-sub-section('Text colors')

      +demo
        +demo-example
          ul.l-text-colors
            each color in ['primary', 'primary-200', 'primary-light', 'primary-dark', 'secondary', 'black', 'semiblack', 'grey', 'grey-light', 'grey-dark', 'white', 'semiwhite', 'yellow', 'blue', 'success', 'green', 'error', 'orange', 'brown', 'violet']
              li
                span(class='text-color-' + color)= color

        +demo-code
          :code
            <ul>
              <li><span class="text-color-primary">primary</span></li>
              <li><span class="text-color-primary-200">primary-200</span></li>
              <li><span class="text-color-primary-light">primary-light</span></li>
              <li><span class="text-color-primary-dark">primary-dark</span></li>
              <li><span class="text-color-black">black</span></li>
              <li><span class="text-color-semiblack">semiblack</span></li>
              <li><span class="text-color-grey">grey</span></li>
              <li><span class="text-color-grey-light">grey-light</span></li>
              <li><span class="text-color-grey-dark">grey-dark</span></li>
              <li><span class="text-color-white">white</span></li>
              <li><span class="text-color-semiwhite">semiwhite</span></li>
              <li><span class="text-color-yellow">yellow</span></li>
              <li><span class="text-color-blue">blue</span></li>
              <li><span class="text-color-success">success</span></li>
              <li><span class="text-color-error">error</span></li>
              <li><span class="text-color-orange">orange</span></li>
            </ul>
      //- end: demo
  //- end: section

  +content-section(contents[1])

    +p Layout utilities contains basic classes for utility like margin/padding resets, alignements etc.

    +p Some utilities can be set for specific breakpoint by adding postfix representing layout.

    +content-sub-section('Spacing resets')

      +p Use <code class='l-code-inline'>.p-none</code> or <code class='l-code-inline'>.m-none</code> to reset margins or paddings. Target specific breakpoint with <code class='l-code-inline'>.m[-s/m/l/xl]-none</code> and <code class='l-code-inline'>.p[-s/m/l/xl]-none</code>.

      +demo(true)
        +demo-code
          :code
            <div class="m-none"> reset margins </div>
            <div class="mt-none"> reset top margin </div>
            <div class="mb-none"> reset bottom margin </div>
            <div class="ml-none"> reset left margin </div>
            <div class="mr-none"> reset right margin </div>
            <div class="my-none"> reset top and bottom margin </div>
            <div class="mx-none"> reset left and right margin </div>

            <div class="p-none"> reset padding </div>
            <div class="pt-none"> reset padding-top </div>
            <div class="pb-none"> reset padding-bottom </div>
            <div class="pl-none"> reset left padding </div>
            <div class="pr-none"> reset right padding </div>
            <div class="py-none"> reset top and bottom padding </div>
            <div class="px-none"> reset left and right padding </div>
      //- end: demo

    +content-sub-section('Flexbox utilities', 'flexbox-utils')

      +ul
        li <code class="l-code-inline">.d-flex</code> assigns <code class="l-code-inline">display: flex</code>
        li <code class="l-code-inline">.flex-column</code> assigns <code class="l-code-inline">flex-direction: column</code>
        li <code class="l-code-inline">.flex-1</code> assigns <code class="l-code-inline">flex: 1</code>
        li <code class="l-code-inline">.flex-noshrink</code> assigns <code class="l-code-inline">flex-shrink: 0</code>
        li <code class="l-code-inline">.flex-nowrap</code> assigns <code class="l-code-inline">flex-wrap: nowrap</code>

    +content-sub-section('Flexbox alignment', 'flexbox-alignment')

      +p Flexbox items are aligned to left by default and take up the height of the row. This behavior can be overriden on both column and row level.

      +note
        +p Alignment utilities can be used only inside flexbox components such as Grid, Bars etc. or custom flexbox components.

      +note
        +p Examples are shown on grid elements.

      +p Horizontal alignment:
        +ul
          li <code class="l-code-inline">.justify-content-end</code> <code class="l-code-inline">.justify-content-center</code>
          li <code class="l-code-inline">.ml-auto</code> <code class="l-code-inline">.mx-auto</code>

      +demo
        +demo-example
          code.l-code-inline .justify-content-end
          .row.justify-content-end
            .col--3
              .l-debug XS3
            .col--3
              .l-debug XS3
          hr
          code.l-code-inline .justify-content-center
          .row.justify-content-center
            .col--3
              .l-debug XS3
            .col--3
              .l-debug XS3
          hr
          code.l-code-inline .justify-content-around
          .row.justify-content-around
            .col--3
              .l-debug XS3
            .col--3
              .l-debug XS3
          hr
          code.l-code-inline .justify-content-between
          .row.justify-content-between
            .col--3
              .l-debug XS3
            .col--3
              .l-debug XS3
          hr
          .row
            .col--3
              .l-debug XS3
            .col--3.ml-auto
              .l-debug XS3 .ml-auto
          hr
          .row
            .col--3.mx-auto
              .l-debug XS3 .mx-auto

        +demo-code
          :code
            <div class="row justify-content-end">
              <div class="col--3"> ... </div>
              <div class="col--3"> ... </div>
            </div>

            <div class="row justify-content-center">
              <div class="col--3"> ... </div>
              <div class="col--3"> ... </div>
            </div>

            <div class="row justify-content-around">
              <div class="col--3"> ... </div>
              <div class="col--3"> ... </div>
            </div>

            <div class="row justify-content-between">
              <div class="col--3"> ... </div>
              <div class="col--3"> ... </div>
            </div>

            <div class="row">
              <div class="col--3"> ... </div>
              <div class="col--3 ml-auto"> ... </div>
            </div>

            <div class="row">
              <div class="col--3 mx-auto"> ... </div>
            </div>

        +p Vertical alignment:
          +ul
            li <code class="l-code-inline">.align-items-start</code> <code class="l-code-inline">.align-items-end</code> <code class="l-code-inline">.align-items-center</code>
            li <code class="l-code-inline">.align-self-start</code> <code class="l-code-inline">.align-self-end</code> <code class="l-code-inline">.align-self-center</code>

          +demo
            +demo-example
              code.l-code-inline .row
              .row
                .col--6.l-debug
                  | Donec ullamcorper nulla non metus auctor fringilla. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Nulla vitae elit libero, a pharetra augue. Cras mattis consectetur purus sit amet fermentum. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Nullam id dolor id nibh ultricies vehicula ut id elit.
                .col--6.l-debug
                  | Lorem ipsum
              hr
              code.l-code-inline .align-items-start
              .row.align-items-start
                .col--6.l-debug
                  | Donec ullamcorper nulla non metus auctor fringilla. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Nulla vitae elit libero, a pharetra augue. Cras mattis consectetur purus sit amet fermentum. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Nullam id dolor id nibh ultricies vehicula ut id elit.
                .col--6.l-debug
                  | Lorem ipsum
              hr
              code.l-code-inline .align-items-end
              .row.align-items-end
                .col--6.l-debug
                  | Donec ullamcorper nulla non metus auctor fringilla. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Nulla vitae elit libero, a pharetra augue. Cras mattis consectetur purus sit amet fermentum. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Nullam id dolor id nibh ultricies vehicula ut id elit.
                .col--6.l-debug
                  | Lorem ipsum
              hr
              code.l-code-inline .align-items-center
              .row.align-items-center
                .col--6.l-debug
                  | Donec ullamcorper nulla non metus auctor fringilla. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Nulla vitae elit libero, a pharetra augue. Cras mattis consectetur purus sit amet fermentum. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Nullam id dolor id nibh ultricies vehicula ut id elit.
                .col--6.l-debug
                  | Lorem ipsum
              hr
              .row.align-items-center
                .col--3.l-debug
                  | Donec ullamcorper nulla non metus auctor fringilla. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.
                .col--3.l-debug.align-self-start
                  | .align-self-start
                .col--3.l-debug.align-self-end
                  | .align-self-end
                .col--3.l-debug.align-self-center
                  | .align-self-center
            +demo-code
              :code
                <div class="row">
                  <div class="col--6"> ... </div>
                  <div class="col--6"> ... </div>
                </div>

                <div class="row align-items-start">
                  <div class="col--6"> ... </div>
                  <div class="col--6"> ... </div>
                </div>

                <div class="row align-items-end">
                  <div class="col--6"> ... </div>
                  <div class="col--6"> ... </div>
                </div>

                <div class="row align-items-center">
                  <div class="col--6"> ... </div>
                  <div class="col--6"> ... </div>
                </div>

                <div class="row">
                  <div class="col--3"> ... </div>
                  <div class="col--3 align-self-start"> ... </div>
                  <div class="col--3 align-self-end"> ... </div>
                  <div class="col--3 align-self-center"> ... </div>
                </div>

      //- end: demo

    +content-sub-section('Float utilities')

      +p Float utilites contains:
        +ul
          li <code class='l-code-inline'>.clearfix</code> for clearing floats inside container.
          li <code class='l-code-inline'>.clear</code> for clearing floats after floated elements.

    +content-sub-section('Display utilities')
      p Target specific breakpoint with <code class='l-code-inline'>.d[-s/m/l/xl]-inline</code> etc.

      +ul
        li <code class='l-code-inline'>.d-inline-block</code> for displaying anything as inline-block.
        li <code class='l-code-inline'>.d-block</code> for displaying anything as block.
        li <code class='l-code-inline'>.d-flex</code> for displaying anything as a flexbox.
        li <code class='l-code-inline'>.d-inline-flex</code> for displaying anything as an inline flexbox.
        li <code class='l-code-inline'>.d-none</code> for hiding anything.

  +content-section(contents[2])

    +p You can programatically show or hide elements for specific layouts by using classes like <code class='l-code-inline'>.hide-[breakpoint]-only</code> or for all layouts larger including specified by classes like <code class='l-code-inline'>.show-[breakpoint]</code>.

    +note
      +p <code class='l-code-inline'>.hide-xs</code>, <code class='l-code-inline'>.show-xs</code> are not available, as XS is the default breakpoint. To hide an element completely, use <code class="l-code-inline">.hide</code>
      +p <code class='l-code-inline'>.show-xl-only</code>, <code class='l-code-inline'>.hide-xl-only</code> are not available, as XL is the largest breakpoint. The same can be accomplished using <code class='l-code-inline'>.show-xl</code>, <code class='l-code-inline'>.hide-xl</code>

    +demo()
      +demo-example(true)
        .row.row--space
          .col
            .l-debug Active layout:
              span.show-xs-only XS
              span.show-s-only S
              span.show-m-only M
              span.show-l-only L
              span.show-xl-only XL
        each bp, i in l_breakpoints
          .row.row--space
            .col--2
              .l-debug= bp.name
            .col--0
              if i > 0
                .row(class="show-" + bp.id)
                  .col
                    .l-debug
                      .row
                        .col--m-4.col--l-3 <code class='l-code-inline'>.show-#{bp.id}</code>
                        .col--m-8.col--l-9 Your screen is #{bp.name} or larger

              if i + 1 < l_breakpoints.length
                .row(class="show-" + bp.id + "-only")
                  .col
                    .l-debug
                      .row
                        .col--m-4.col--l-3 <code class='l-code-inline'>.show-#{bp.id}-only</code>
                        .col--m-8.col--l-9
                          | Your screen is
                          if i > 0
                            |
                            | larger than #{bp.name} and
                          if i + 1 < l_breakpoints.length
                            |
                            | smaller than #{l_breakpoints[i + 1].name}

              if i > 0
                .row(class="hide-" + bp.id)
                  .col
                    .l-debug
                      .row
                        .col--m-4.col--l-3 <code class='l-code-inline'>.hide-#{bp.id}</code>
                        .col--m-8.col--l-9 Your screen is smaller than #{bp.name}

              if i + 1 < l_breakpoints.length
                .row(class="hide-" + bp.id + "-only")
                  .col
                    .l-debug
                      .row
                        .col--m-4.col--l-3 <code class='l-code-inline'>.hide-#{bp.id}-only</code>
                        .col--m-8.col--l-9 Your screen is
                          |
                          |
                          if i > 0
                            | either smaller than #{bp.name} or
                            |
                            |
                          | larger than #{l_breakpoints[i + 1].name}

  +content-section(contents[3], true)

    +h3 Margin and padding
    +p Margin and padding spacing are adapted from <a href="https://getbootstrap.com/docs/5.1/utilities/spacing/#notation" class="" target="_blank">Bootstrap utilities</a>, with a few differences:

    +p The classes are named using the format <code class='l-code-inline'>{property}{sides}-{size}</code> for xs and <code class='l-code-inline'>{property}{sides}-{breakpoint}-{size}</code> for s, m, l, and xl breakpoints.

    +p Where <i>sides</i> is one of:
    +ul
      li <code class='l-code-inline'>t</code> - for classes that set <code class='l-code-inline'>margin-top</code> or <code class='l-code-inline'>padding-top</code>
      li <code class='l-code-inline'>b</code> - for classes that set <code class='l-code-inline'>margin-bottom</code> or <code class='l-code-inline'>padding-bottom</code>
      li <code class='l-code-inline'>l</code> - (left) for classes that set <code class='l-code-inline'>margin-left</code> or <code class='l-code-inline'>padding-left</code>
      li <code class='l-code-inline'>r</code> - (right) for classes that set <code class='l-code-inline'>margin-right</code> or <code class='l-code-inline'>padding-right</code>
      li <code class='l-code-inline'>x</code> - for classes that set both <code class='l-code-inline'>*-left</code> and <code class='l-code-inline'>*-right</code>
      li <code class='l-code-inline'>y</code> - for classes that set both <code class='l-code-inline'>*-top</code> and <code class='l-code-inline'>*-bottom</code>
      li blank - for classes that set a <code class='l-code-inline'>margin</code> or <code class='l-code-inline'>padding</code> on all 4 sides of the element

    +p Where <i>size</i> is one of:
    +ul
      li <code class='l-code-inline'>none</code> - for classes that eliminate the <code class='l-code-inline'>margin or <code class='l-code-inline'>padding</code> by setting it to 0
      li <code class='l-code-inline'>tiny</code> - tiny space (5px)
      li <code class='l-code-inline'>small</code> - small space (10px)
      li <code class='l-code-inline'>medium</code> - medium space (20px)
      li <code class='l-code-inline'>large</code> - large space (40px)
      li <code class='l-code-inline'>auto</code> - for classes that set the <code class='l-code-inline'>margin</code> to auto

    +h3 Background utilites:
    +ul
      each color in ['default', 'secondary', 'teal', 'green', 'blue', 'grey', 'grey-dark', 'primary', 'primary-light', 'primary-dark', 'orange', 'violet', 'yellow', 'brown']
        li(class=`bg-${color}`) <code class='l-code-inline'>.bg-#{color}</code> for #{color} background color.

    +p Border utilites:
      +ul
        li.border-bottom-grey <code class='l-code-inline'>.border-bottom-grey</code> for 1px grey bottom border
        li.border-bottom-grey-2 <code class='l-code-inline'>.border-bottom-grey-2</code> for 2px grey bottom border

    +p Various other utilites contains:
      +ul
        li <code class='l-code-inline'>.clickable</code> for making pointer cursor.
        li <code class='l-code-inline'>.visually-hidden</code> for hidding element visually without <code class='l-code-inline'>display: none;</code>.
        li <code class='l-code-inline'>.overflow-hidden</code> for setting <code class='l-code-inline'>overflow: hidden;</code>.
        li <code class='l-code-inline'>.overflow-auto</code> for setting <code class='l-code-inline'>overflow: auto;</code>.

    +p Horizontal overflow scroll utilities:
      .overflow-scroll-x
        | This is a rather long text which will be horizontally scrollable on smaller screens.
      hr.my-tiny
      .overflow-scroll-shadow
        .overflow-scroll-x
          .mr-large With fadeout effect. This is a <a href="#" class="link">rather long text which</a> will be horizontally scrollable on smaller screens.
      hr.my-tiny
      .bg-grey.text-color-white.overflow-scroll-shadow
        .overflow-scroll-x
          .mr-large With fadeout effect. This is a rather long text which will be horizontally scrollable on smaller screens.
