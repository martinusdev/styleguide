extends templates/layout

include ./../mixins/discountBadge
include ./../mixins/icon
include ./../mixins/faIcon

//- Options
block prepend opts
  - var page = helpers.getPageIds('foundations.icons', l_sitemap);
  - var categoryID = page.category;
  - var pageID = page.page;

//- Content
block prepend content

  +main-info(['app/styles/modules/_icons_images.scss'], contents)
    +p-big Documentation, preview and usage of icons and image utilities.

  //- end: main info

//- Content
block append content

  // FONT AWESOME ICONS
  +content-section(contents[0])

    +p It is possible to use the following sub-set of <a href="https://fontawesome.com/icons?d=gallery" target="_blank">Font Awesome</a> Icons.
    +p Using just HTML, the markup is: <code class='l-code-inline'>&lt;i class="fad fa-heart"&gt;&lt;/i&gt;</code>
    +p For more instructions on markup, styles, sizing, and coloring, please refer to <a href="https://fontawesome.com/how-to-use/on-the-web/referencing-icons/basic-use" target="_blank">the official documentation</a>.

    +demo
      +demo-example
        each icon in icons
          each iconNames, iconStyle in icon
            case iconStyle
              when 'duotone'
                - prefix = 'fad';
              when 'regular'
                - prefix = 'far';
              when 'light'
                - prefix = 'fal';
              when 'brands'
                - prefix = 'fab';
              when 'kit'
                - prefix = 'fak';
              default
                - prefix = 'fas';

            +h3 #{iconStyle} (.#{prefix})
            ul.l-icons
              each iconName in iconNames
                - const iconClass = `${prefix} fa-${iconName}`;

                li(data-tooltip, title=iconClass).l-icons_item
                  +faIcon(iconName, prefix).fa-lg
                  br
                  abbr(title=iconClass, data-clipboard, data-clipboard-msg-success='<small>skopírované</small>', data-clipboard-text=`${iconName}`).text-color-grey= iconName

  //- ICONS
  +content-section(contents[1])

    +p Here is preview of icon set used in this project. An icon can be created by using pug mixin <code class='l-code-inline'>+icon(iconName)</code>.
    +p Using just HTML, the markup is: <code class='l-code-inline'>&lt;svg class="icon"&gt;&lt;use xlink:href="#icon-iconName"&gt;&lt;/svg class="icon"&gt;</code>

    +demo
      +demo-example
        ul.l-icons
          each icon in helpers.getAppIcons()
            li.l-icons_item
              +icon(icon, 'icon--medium')
              br
              abbr(title=icon).text-color-grey= icon

      +demo-code
        :code
          <ul>
            - for (var i=0; i < getIcons().length; i++) {
              <li>
                <svg class="icon icon-add">
                  <use xlink:href="#icon-getSvgIcons()[i]"></use>
                </svg>
              </li>
            - }
          </ul>
    //- end: demo

    +content-sub-section('Sizes')

      +p There are fours icon sizes: small, medium, large and xlarge. Size for icon can be specified with class <code class='l-code-inline'>.icon--[small/medium/large/xlarge]</code> on the icon element.
      +p Our pug mixin accepts a <code class='l-code-inline'>className</code> parameter. To create a large icon, just pass the appropriate class as the second parameter <code class='l-code-inline'>+icon(iconName, 'home')</code>

      +note
        +p In case there is no class for size, icon will inherit size from parent font-size property.

      +demo
        +demo-example
          ul.l-icons
            li.l-icons_item
              +icon-sg('sg-home', 'icon--xxlarge')
              br
              abbr(title=icon).text-color-grey XXL
            li.l-icons_item
              +icon-sg('sg-home', 'icon--xlarge')
              br
              abbr(title=icon).text-color-grey XL
            li.l-icons_item
              +icon-sg('sg-home', 'icon--large')
              br
              abbr(title=icon).text-color-grey L
            li.l-icons_item
              +icon-sg('sg-home', 'icon--medium')
              br
              abbr(title=icon).text-color-grey M
            li.l-icons_item
              +icon-sg('sg-home', 'icon--small')
              br
              abbr(title=icon).text-color-grey S

        +demo-code
          :code
            <ul>
              <li>
                <svg class="icon icon-home icon--xxlarge">
                  <use xlink:href="#icon-home"></use>
                </svg>
              </li>
              <li>
                <svg class="icon icon-home icon--xlarge">
                  <use xlink:href="#icon-home"></use>
                </svg>
              </li>
              <li>
                <svg class="icon icon-home icon--large">
                  <use xlink:href="#icon-home"></use>
                </svg>
              </li>
              <li>
                <svg class="icon icon-home icon--medium">
                  <use xlink:href="#icon-home"></use>
                </svg>
              </li>
              <li>
                <svg class="icon icon-home icon--small">
                  <use xlink:href="#icon-home"></use>
                </svg>
              </li>
            </ul>
      //- end: demo

    +content-sub-section('Colors')

      +p Icons use same <a class='l-a' href=`typography${htmlPostfix}#utilities`>text color</a> priciple for colors as typography.

      +note
        +p In case there is no class for color, icon will inherit color from parent color property.

      +demo
        +demo-example
          ul.l-icons
            li.l-icons_item
              +icon-sg('sg-home', 'icon--large').text-color-primary
            li.l-icons_item
              +icon-sg('sg-home', 'icon--large').text-color-grey
            li.l-icons_item
              +icon-sg('sg-home', 'icon--large').text-color-success
            li.l-icons_item.text-color-error
              +icon-sg('sg-home', 'icon--large').text-color-error

        +demo-code
          :code
            <ul>
              <li>
                <svg class="icon icon-home text-color-primary">
                  <use xlink:href="#icon-home"></use>
                </svg>
              </li>
              <li>
                <svg class="icon icon-home text-color-primary">
                  <use xlink:href="#icon-home"></use>
                </svg>
              </li>
              <li class="text-color-semiblack">
                <svg class="icon icon-home icon--large">
                  <use xlink:href="#icon-home"></use>
                </svg>
              </li>
              <li class="text-color-error">
                <svg class="icon icon-home icon--large">
                  <use xlink:href="#icon-home"></use>
                </svg>
              </li>
            </ul>
      //- end: demo
