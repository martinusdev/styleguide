extends templates/layout

//- Options
block prepend opts
  - var page = helpers.getPageIds('javascripts.select', l_sitemap);
  - var categoryID = page.category;
  - var pageID = page.page;

//- Content
block prepend content

  +main-info(['app/scripts/modules/Select.js'], contents)

    +p-big Documentation for select javascript module.

  //- end: main info

//- Content
block append content

  //- SELECT
  +content-section(contents[0])

    +content-sub-section('Usage')

      +p Usage is shown in&nbsp;
        a.l-a(href=`forms-basic#{htmlPostfix}#select`) forms-basic
        |  section of this styleguide.

    +content-sub-section('Default initialization')

      +p Initialization is shown on example below. Constructor returns array of select elements.

      +p Defailt initialization is done in <code class='l-code-inline'>main.js</code> file for all <code class='l-code-inline'>select</code> elements with class <code class='l-code-inline'>.js-select</code>.

      +demo(true)
        +demo-example
          select.js-select
            each option in [1,2,3,4,5,6]
              option Option #{option}
        +demo-code
          :code
            <script>
              var mySelects = new myApp.Select();
              console.log(mySelects);
              // [{select object}, {select object}, ...]
              mySelects[0].disable();
              // etc..
            </script>

    +content-sub-section('Custom initialization')

      +p In case it's needed to create select with more customized behavior, all&nbsp;
        a.l-a(href='https://github.com/jshjohnson/Choices', title="title", attr) Choices.js
        |  options can be passed to <code class='l-code-inline'>myApp.Select</code> constructor as second argument <code class='l-code-inline'>config</code>.

      +demo(true)
        +demo-code
          :code
            <select id="myCustomSelect">
              <option value="test">Option</option>
              <option value="test">Better option</option>
            </select>
            <script>
              // custom selector
              var customSelect = new myApp.Select('#myCustomSelect', {
                shouldSort: false
              });
            </script>

  +content-section(contents[1])

    +content-sub-section('Defaults')

      +p <code class='l-code-inline'>new Select([selector, [config]])</code>

      .l-table-wrap
        table.l-table
          thead
            tr
              th Name
              th Type
              th Default
              th Description
          tbody
            tr
              td selector
              td <code class='l-code-inline'>String</code>
              td <code class='l-code-inline'>'.js-select'</code>
              td Default DOM selector.
            tr
              td config
              td <code class='l-code-inline'>Object</code>
              td <code class='l-code-inline'>{}</code>
              td Config object. All config options from
                | #{' '}
                a.l-a(href="https://github.com/jshjohnson/Choices#setup") Choices.js
                |  are available.

    +content-sub-section('DOM attributes')

      +p Available DOM attributes.

      table.table
        thead
          tr
            th Name
            th Type
            th Default
            th Description
        tbody
          tr
            td data-clearable
            td <code class='l-code-inline'>Boolean</code>
            td <code class='l-code-inline'>null</code>
            td If true, selected option can be cleared to placeholder or empty value with button.
          tr
            td data-autocomplete
            td <code class='l-code-inline'>Boolean</code>
            td <code class='l-code-inline'>null</code>
            td If true, select has search input inside dropdown which will filter options based on search query.
          tr
            td data-select-dropdown-width
            td <code class='l-code-inline'>String/CSS unit</code>
            td <code class='l-code-inline'>null</code>
            td If specified, select dropdown will have width same as value of this attribute.

  +content-section(contents[2])

    +content-sub-section('Change select default language')

      +p Js-select language can be set in by changing value of <code class='l-code-inline'>window.myApp.selectLanguage</code>. Default value is <code class='l-code-inline'>sk</code> and it can be set to <code class='l-code-inline'>cz</code>.

      +demo(true)
        +demo-code
          :code
            <script>
              window.myApp = window.myApp || {};
              window.myApp.selectLanguage = 'sk';
            </script>
